service: idp-id-broker

frameworkVersion: ">=1.21.0 <2.0.0"

provider:
  name: aws
  runtime: nodejs6.10
  memorySize: 512
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-east-1:*:*"

custom:
  tableNamespace: ${env:IDP_NAME}.idp-id-broker.${opt:stage, self:provider.stage}
  userTable: ${self:custom.tableNamespace}.user

functions:
  userCreate:
    handler: user/create.create
    environment:
      TABLE_NAME: ${self:custom.userTable}
    events:
      - http:
          path: user
          method: post
          cors: true
  userDelete:
    handler: user/delete.delete
    environment:
      TABLE_NAME: ${self:custom.userTable}
    events:
      - http:
          path: user/{id}
          method: delete
          cors: true
  userGet:
    handler: user/get.get
    environment:
      TABLE_NAME: ${self:custom.userTable}
    events:
      - http:
          path: user/{id}
          method: get
          cors: true
  userList:
    handler: user/list.list
    environment:
      TABLE_NAME: ${self:custom.userTable}
    events:
      - http:
          path: user
          method: get
          cors: true
  userUpdate:
    handler: user/update.update
    environment:
      TABLE_NAME: ${self:custom.userTable}
    events:
      - http:
          path: user/{id}
          method: put
          cors: true

resources:
  Resources:
    UserDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: '${self:custom.userTable}'
